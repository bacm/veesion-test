# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: alertsystem
---
# PersistentVolumeClaim for PostgreSQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgdata-pvc
  namespace: alertsystem
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Nginx Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: alertsystem
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx-local:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
---
# Nginx Service
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: alertsystem
spec:
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 80
      nodePort: 30080
  selector:
    app: nginx
---
# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: alertsystem
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: veesion
            - name: POSTGRES_PASSWORD
              value: secret
            - name: POSTGRES_DB
              value: veesion
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata-pvc
---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: alertsystem
spec:
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
# RabbitMQ Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: alertsystem
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          ports:
            - containerPort: 5672
            - containerPort: 15672
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: guest
            - name: RABBITMQ_DEFAULT_PASS
              value: guest
---
# RabbitMQ Service
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: alertsystem
spec:
  type: NodePort
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
      nodePort: 30672
    - name: management
      port: 15672
      targetPort: 15672
      nodePort: 31672
  selector:
    app: rabbitmq
---
# Alert-Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alert-service
  namespace: alertsystem
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: alert-service
  template:
    metadata:
      labels:
        app: alert-service
    spec:
      containers:
        - name: alert-service
          image: alert-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          env:
            - name: RABBITMQ_HOST
              value: "rabbitmq"
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USER
              value: "guest"
            - name: RABBITMQ_PASS
              value: "guest"
            - name: RABBITMQ_URL
              value: "amqp://guest:guest@rabbitmq:5672/"
---
# Alert-Service Service
apiVersion: v1
kind: Service
metadata:
  name: alert-service
  namespace: alertsystem
spec:
  type: NodePort
  ports:
    - name: http
      port: 8000
      targetPort: 8000
      nodePort: 30000
  selector:
    app: alert-service
---
# Alert-Worker Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alert-worker
  namespace: alertsystem
spec:
  replicas: 3
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: alert-worker
  template:
    metadata:
      labels:
        app: alert-worker
    spec:
      containers:
        - name: alert-worker
          image: alert-worker:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: RABBITMQ_HOST
              value: "rabbitmq"
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USER
              value: "guest"
            - name: RABBITMQ_PASS
              value: "guest"
            - name: RABBITMQ_URL
              value: "amqp://guest:guest@rabbitmq:5672/"
