version: "3.8"

services:

  nginx:
    image: nginx-local:latest
    ports:
      - "8080:80"
    volumes:
      - ./videos:/usr/share/nginx/html/videos
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: veesion
      POSTGRES_PASSWORD: password
      POSTGRES_DB: alert_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  alert-service:
    image: alert-service:latest
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_HOST=rabbitmq
    networks:
      - backend
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  alert-worker:
    image: alert-worker:latest
    environment:
      - RABBITMQ_HOST=rabbitmq
    networks:
      - backend
    deploy:
      replicas: 3  # ðŸ‘ˆ pool de 3 workers ici
      restart_policy:
        condition: on-failure

volumes:
  pgdata:

networks:
  backend:
